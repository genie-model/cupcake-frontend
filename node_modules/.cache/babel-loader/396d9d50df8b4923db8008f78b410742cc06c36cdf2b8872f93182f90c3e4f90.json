{"ast":null,"code":"var _jsxFileName = \"/home/ravitheja/cupcake-frontend/src/components/FileStructure.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport caretRight from 'bootstrap-icons/icons/caret-right.svg';\nimport caretDown from 'bootstrap-icons/icons/caret-down.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  job1: {\n    heading: 'Job 1',\n    child: {\n      file1: {\n        heading: 'Job 1.1',\n        child: {}\n      },\n      file2: {\n        heading: 'Job 1.2',\n        child: {}\n      },\n      file3: {\n        heading: 'Job 1.3',\n        child: {}\n      }\n    }\n  }\n};\nconst JobIcon = ({\n  heading,\n  childExist,\n  isOpen,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    style: {\n      cursor: 'pointer'\n    },\n    children: [childExist && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: isOpen ? caretDown : caretRight,\n      alt: \"caret icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this), heading]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = JobIcon;\nconst RenderNode = ({\n  level,\n  heading,\n  childExist,\n  isOpen,\n  onClick\n}) => {\n  const marginLeft = 2 * level + `rem`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft\n    },\n    children: /*#__PURE__*/_jsxDEV(JobIcon, {\n      heading: heading,\n      childExist: childExist,\n      isOpen: isOpen,\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c2 = RenderNode;\nconst RenderTree = ({\n  node,\n  level,\n  expandedNodes,\n  toggleNode\n}) => {\n  if (!node) return null;\n  const isOpen = expandedNodes[node.heading];\n  const hasChild = node.child && Object.keys(node.child).length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RenderNode, {\n      level: level,\n      heading: node.heading,\n      childExist: hasChild,\n      isOpen: isOpen,\n      onClick: () => toggleNode(node.heading)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isOpen && hasChild && Object.keys(node.child).map(key => /*#__PURE__*/_jsxDEV(RenderTree, {\n      node: node.child[key],\n      level: level + 1,\n      expandedNodes: expandedNodes,\n      toggleNode: toggleNode\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c3 = RenderTree;\nconst FileStructure = () => {\n  _s();\n  const [expandedNodes, setExpandedNodes] = useState({});\n  const toggleNode = heading => {\n    setExpandedNodes(prev => ({\n      ...prev,\n      [heading]: !prev[heading]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-dir-container\",\n    children: [/*#__PURE__*/_jsxDEV(JobIcon, {\n      heading: \"My Jobs\",\n      childExist: true,\n      isOpen: expandedNodes[\"My Jobs\"],\n      onClick: () => toggleNode(\"My Jobs\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), expandedNodes[\"My Jobs\"] && /*#__PURE__*/_jsxDEV(RenderTree, {\n      node: data.job1,\n      level: 1,\n      expandedNodes: expandedNodes,\n      toggleNode: toggleNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(FileStructure, \"FnQji8mxciD8ZbGhuj/np5gNXdg=\");\n_c4 = FileStructure;\nexport default FileStructure;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"JobIcon\");\n$RefreshReg$(_c2, \"RenderNode\");\n$RefreshReg$(_c3, \"RenderTree\");\n$RefreshReg$(_c4, \"FileStructure\");","map":{"version":3,"names":["React","useState","caretRight","caretDown","jsxDEV","_jsxDEV","data","job1","heading","child","file1","file2","file3","JobIcon","childExist","isOpen","onClick","style","cursor","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","RenderNode","level","marginLeft","_c2","RenderTree","node","expandedNodes","toggleNode","hasChild","Object","keys","length","map","key","_c3","FileStructure","_s","setExpandedNodes","prev","className","_c4","$RefreshReg$"],"sources":["/home/ravitheja/cupcake-frontend/src/components/FileStructure.js"],"sourcesContent":["import React, { useState } from 'react';\nimport caretRight from 'bootstrap-icons/icons/caret-right.svg';\nimport caretDown from 'bootstrap-icons/icons/caret-down.svg';\n\nconst data = {\n  job1: {\n    heading: 'Job 1',\n    child: {\n      file1: {\n        heading: 'Job 1.1',\n        child: {}\n      },\n      file2: {\n        heading: 'Job 1.2',\n        child: {}\n      },\n      file3: {\n        heading: 'Job 1.3',\n        child: {}\n      }\n    }\n  }\n};\n\nconst JobIcon = ({ heading, childExist, isOpen, onClick }) => {\n  return (\n    <div onClick={onClick} style={{ cursor: 'pointer' }}>\n      {childExist && <img src={isOpen ? caretDown : caretRight} alt=\"caret icon\" />}\n      {heading}\n    </div>\n  );\n};\n\nconst RenderNode = ({ level, heading, childExist, isOpen, onClick }) => {\n  const marginLeft = 2 * level+`rem`;\n  return (\n    <div style={{ marginLeft }}>\n      <JobIcon heading={heading} childExist={childExist} isOpen={isOpen} onClick={onClick} />\n    </div>\n  );\n};\n\nconst RenderTree = ({ node, level, expandedNodes, toggleNode }) => {\n  if (!node) return null;\n\n  const isOpen = expandedNodes[node.heading];\n  const hasChild = node.child && Object.keys(node.child).length > 0;\n\n  return (\n    <div>\n      <RenderNode\n        level={level}\n        heading={node.heading}\n        childExist={hasChild}\n        isOpen={isOpen}\n        onClick={() => toggleNode(node.heading)}\n      />\n      {isOpen && hasChild && Object.keys(node.child).map((key) => (\n        <RenderTree\n          key={key}\n          node={node.child[key]}\n          level={level + 1}\n          expandedNodes={expandedNodes}\n          toggleNode={toggleNode}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst FileStructure = () => {\n    const [expandedNodes, setExpandedNodes] = useState({});\n\n    const toggleNode = (heading) => {\n        setExpandedNodes(prev => ({\n        ...prev,\n        [heading]: !prev[heading]\n        }));\n    };\n\n    return (\n        <div className=\"file-dir-container\">\n        <JobIcon heading=\"My Jobs\" childExist={true} isOpen={expandedNodes[\"My Jobs\"]} onClick={() => toggleNode(\"My Jobs\")} />\n        {expandedNodes[\"My Jobs\"] && <RenderTree node={data.job1} level={1} expandedNodes={expandedNodes} toggleNode={toggleNode} />}\n        </div>\n    );\n}\n\nexport default FileStructure;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}